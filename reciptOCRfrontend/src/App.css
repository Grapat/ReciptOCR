/* app.css */

/* Global reset for scrolling behavior */
html,
body,
#root {
  height: 100%; /* Ensures html, body, and root div take full height */
  margin: 0;
  padding: 0;
  overflow-x: hidden; /* Prevent horizontal scrolling always */
  overflow-y: auto; /* Allow vertical scrolling by default for the entire page */
  font-family: Arial, sans-serif;
  background-color: #f0f2f5;
}

.app-container {
  display: flex;
  flex-direction: column; /* Stacks header above the main content */
  align-items: center; /* Centers the content horizontally */
  height: 100vh; /* Make app-container take full viewport height on large screens */
  padding: 20px;
  box-sizing: border-box; /* Include padding in height calculation */
  overflow-y: hidden; /* Hide vertical scrollbar on app-container on large screens */
}

/* Header styles (assuming they are in Header.jsx or directly in App.jsx as before) */
.header-title {
  text-align: center;
  color: #333;
  margin-bottom: 10px;
}

.header-description {
  text-align: center;
  color: #555;
  margin-bottom: 20px;
}

/* Main Content Layout - The parent of the left and right columns */
.main-content-layout {
  display: flex; /* Enables flexbox for horizontal layout */
  flex-wrap: nowrap; /* Prevent wrapping to force horizontal layout unless explicitly broken */
  justify-content: center; /* Centers items horizontally */
  gap: 20px; /* Space between the left and right columns */
  width: 100%;
  max-width: 1220px; /* (400px for left + 800px for right + 20px gap) */
  margin-top: 20px; /* Space below the header */
  flex-grow: 1; /* Allows this container to take available vertical space */
  overflow: hidden; /* Prevents horizontal scroll on large screens */
}

/* Common card container styles */
.card-container {
  background-color: #ffffff;
  padding: 25px;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
  gap: 15px;
  box-sizing: border-box;
}

/* Left Column: Upload Section */
.upload-section-container {
  /* Fixed width for the upload section */
  flex: 0 0 400px; /* No grow, no shrink, fixed basis of 400px */
  min-width: 400px;
  max-width: 400px;
  /* Height matches the combined height of the right column */
  max-height: 100vh; /* Adjust based on header/overall padding */
  overflow-y: auto; /* Enable vertical scrolling within this section */
}

/* Right Column: Container for Form and Raw Output sections */
.right-content-column {
  /* NEW wrapper for the two right sections */
  display: flex;
  flex-direction: column; /* Stacks its children (form and raw output) vertically */
  /* Fixed width for the entire right column block */
  flex: 0 0 800px; /* No grow, no shrink, fixed basis of 800px */
  min-width: 800px;
  max-width: 800px;
  gap: 20px; /* Space between form and raw output sections */
  box-sizing: border-box;
  /* Height matches the left column's height */
  max-height: 100vh; /* Adjust based on header/overall padding */
  overflow: hidden; /* Hide scrollbar for this container itself; its children will scroll */
}

/* Top Right Section: Form Section */
.form-section-container {
  flex-grow: 1; /* Allows it to take available vertical space */
  /* Calculate fixed height for each section based on parent's height and gap */
  max-height: 100vh;
  overflow-y: auto; /* Enable vertical scrolling within this section */
}

/* Bottom Right Section: Raw Output Section */
.raw-output-section-container {
  flex-grow: 1; /* Allows it to take available vertical space */
  /* Calculate fixed height for each section based on parent's height and gap */
  max-height: calc(
    ((100vh - 120px) - 20px) / 2
  ); /* (Parent's max-height - gap) / 2 */
  overflow-y: auto; /* Enable vertical scrolling within this section */
}

/* Parsed Data Container - Make it 2 columns */
.parsed-data-container {
  flex-grow: 1; /* Allows it to take available height */
  display: grid; /* Changed to grid for 2-column layout */
  grid-template-columns: repeat(2, 1fr); /* Two equal columns */
  gap: 15px; /* Gap between grid items (form groups) */
  overflow-y: auto; /* Add internal scroll for form fields if needed */
}

/* Ensure the title within parsed data container doesn't get messed up by grid */
.parsed-data-title {
  grid-column: 1 / -1; /* Make the title span all columns */
  margin-bottom: 0; /* Adjust margin if needed */
}

/* Ensure form groups within parsed data align properly */
.form-group {
  margin-bottom: 0; /* Remove default margin-bottom, handled by grid gap */
  /* No width needed here, grid handles sizing */
}

.extracted-text-container {
  flex-grow: 1;
  display: flex;
  flex-direction: column; /* Stack title and content vertically */
}

.extracted-text-content {
  background-color: #f0f0f0;
  padding: 15px;
  border-radius: 5px;
  white-space: pre-wrap;
  font-family: "monospace", monospace;
  font-size: 0.9rem;
  color: #333;
  flex-grow: 1; /* Allows the content to expand and fill available height */
  overflow-y: auto; /* Ensure this specific text area scrolls if its content is too long */
}

/* Push buttons to the bottom */
.process-button,
.save-button {
  width: 100%;
  padding: 12px;
  background-color: #28a745;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 1.1rem;
  transition: background-color 0.2s;
  margin-top: auto; /* Push to the bottom of the flex container */
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Input and button styles */
.form-label {
  display: block;
  margin-bottom: 5px;
  font-weight: bold;
  color: #333;
}

.form-input {
  width: 100%;
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 4px;
  box-sizing: border-box;
  font-size: 1rem;
}

.file-input-wrapper {
  margin-bottom: 20px;
}

/* Hidden file input styles */
.file-input-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.file-input-button {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 10px 15px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 1rem;
  transition: background-color 0.2s;
  width: 100%;
}

.file-input-button:hover {
  background-color: #0056b3;
}

.file-input-icon {
  margin-right: 8px;
}

.image-preview-container {
  min-height: 200px;
  max-height: 300px;
  border: 1px dashed #ccc;
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  margin-bottom: 20px;
  background-color: #f9f9f9;
}

.image-preview {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
}

.image-preview-placeholder {
  color: #999;
  font-style: italic;
}

.process-button:hover {
  background-color: #218838;
}

.process-button:disabled {
  background-color: #cccccc;
  cursor: not-allowed;
}

.status-message {
  padding: 10px;
  border-radius: 4px;
  margin-bottom: 15px;
  text-align: center;
  font-weight: bold;
}

.status-message-success {
  background-color: #d4edda;
  color: #155724;
  border: 1px solid #c3e6cb;
}

.status-message-error {
  background-color: #f8d7da;
  color: #721c24;
  border: 1px solid #f5c6cb;
}

.spinner {
  border: 4px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top: 4px solid #fff;
  width: 18px;
  height: 18px;
  -webkit-animation: spin 1s linear infinite;
  animation: spin 1s linear infinite;
  margin-right: 8px;
}

@-webkit-keyframes spin {
  0% {
    -webkit-transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Responsive adjustments */
@media (max-width: 1024px) {
  /* Allow the entire app container to scroll vertically */
  .app-container {
    height: auto; /* Let content dictate height */
    min-height: 100vh; /* Ensure it still covers full viewport if content is short */
    overflow-y: auto; /* Enable vertical scrolling */
    padding-bottom: 40px; /* Add some padding at the bottom when scrollable */
  }

  .main-content-layout {
    flex-direction: column; /* Stack columns vertically on smaller screens */
    align-items: center;
    overflow: visible; /* Let content overflow if needed, handled by app-container scroll */
    max-width: 100%; /* Allow layout to take full width */
  }

  /* When stacked, sections should take up defined width with padding */
  .upload-section-container,
  .right-content-column {
    flex: 0 0 auto; /* Remove fixed flex basis, allow to adapt */
    min-width: unset; /* Remove fixed min-width */
    max-width: 600px; /* Max width when stacked */
    width: 90%; /* Take 90% of parent width */
    max-height: none; /* Crucial: Remove fixed max-height to allow content to push scroll */
    overflow-y: auto; /* Keep internal scrolling for these sections */
  }

  .form-section-container,
  .raw-output-section-container {
    max-height: none; /* Allow sections to grow naturally when stacked */
    flex-grow: 1; /* Allow them to share space if height is constrained, but typically not needed when stacked */
  }

  /* Parsed data container on smaller screens */
  .parsed-data-container {
    grid-template-columns: 1fr; /* Single column on smaller screens */
    gap: 15px; /* Keep the gap */
  }

  .parsed-data-title {
    grid-column: 1 / -1; /* Title still spans full width */
  }
}
